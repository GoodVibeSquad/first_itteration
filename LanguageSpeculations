//we do the split under the hood, use scikitlearn

//Layer er en overloadet Contstructor
 som skal have antal rækker, kan tage søjler 
 og kan tage en aktiverings function
 
Layer input = new Layer(6)
Layer hidden = new Layer(5,2, relu)
Layer output = new Layer(10,softmax)

NeuralNetwork er en klasse som skal have tre parametre:
 input, hidden og output, 
 til at starte med er bias predefineret, men kan ændres senere

NeuralNetwork nn = new NeuralNetwork(input, hidden, output,resultArray)

data = "filepath"
dataType = "img"
epochs = int // hvor mange gange den træner på dataen 
learningRate = double

nn.train(data, dataType, epochs, learningRate, lossFunction,batchSize)
nn.saveModel("filepath")

NeuralNetwork nn = new NeuralNetwork().loadModel("filepath")

data = "filepath"
dataType = "img"
nn.predict(data, dataType)
//Print accuracy for the user.
//Accuracy in % = (correctly predicted datapoints in the testSet/total datapoints in testSet)*100




======Working test file:

{
Layer input = new Layer(6);
Layer hidden = new Layer(5,2, activationFunction);
Layer output = new Layer(10, activationFunction, lossFunction);



NeuralNetwork nn = new NeuralNetwork(input, hidden, output);

string data = "c:\Neuro\imgs";
string dataType = ".img";
string epochs = 5;
double learningRate = 0.01;
string trueAnswers = "c:\Neuro\answers.txt";
int batchSize = 6;

nn.train(data, dataType, epochs, learningRate, trueAnswers,  batchSize);
nn.saveModel("c:\Neuro\network", "Neuro1");

NeuralNetwork nn = NeuralNetwork.loadModel("c:\Neuro\network\Neuro1.txt");

string data = "c:\Neuro\imgs2";
string dataType = ".img";
nn.predict(data, dataType);

}



 